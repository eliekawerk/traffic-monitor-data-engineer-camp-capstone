name: integration
#trigger on
on:
  workflow_dispatch: 
  # pull_request:
  #   branches: [ main ]

env:
  GH_REF: ${{ github.ref }}
  aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  aws_region: ${{ secrets.AWS_REGION }}

jobs: 
  build:  # your custom name
    runs-on: ubuntu-latest
    steps: 
      # git checkout code to the machine
      - name: checkout code # custome name
        uses: actions/checkout@v3
      
      # install python version 
      - name: set up python 
        uses: actions/setup-python@v4
        with: 
          python-version: '3.10'

      # install python dependencies 
      - name: install dependencies 
        run: |
          python -m pip install --upgrade pip
          pip install -r data-transformation/dbt/requirements.txt
      
      # install dbt packages
      - name: dbt deps
        run: |
          cd data-transformation/dbt/traffic_monitor
          dbt deps

      # read env file from s3
      - uses: keithweaver/aws-s3-github-action@v1.0.0
        with:
          command: cp
          source: s3://traffic-monitor-env-s3-bucket/.env
          # destination:
          aws_access_key_id: ${{ env.aws_access_key_id }}
          aws_secret_access_key: ${{ env.aws_secret_access_key }}
          aws_region: ${{ env.aws_region}}
      
      # write s3 env to env
      - name: write to $github_env
        shell: bash
        run: cat .env | while read line || [[ -n $line ]]; do echo $line >> $GITHUB_ENV; done
      
      # run sqlfluff linting
      - name: sql linting
        run: |           
          cd data-transformation/dbt
          sqlfluff lint traffic_monitor 

      # checkout to main branch
      - name: checkout to main
        uses: actions/checkout@v3
        with:
          ref: main

      # generate dbt manifest.json
      - name: generate dbt manifest 
        run: |           
          cd data-transformation/dbt/traffic_monitor
          dbt deps
          dbt compile --target prod
      
      # upload manifest.json
      - name: upload dbt manifest 
        uses: actions/upload-artifact@v3
        with: 
          name: manifest.json
          path: data-transformation/dbt/traffic_monitor/target/manifest.json

      # checkout back to current branch 
      - name: checkout to current branch 
        uses: actions/checkout@v3
      
      # download manifest.json to current working directory 
      - uses: actions/download-artifact@v3
        with:
          name: manifest.json
          path: data-transformation/dbt/traffic_monitor

      # dbt run and test
      # dbt run -m state:modified+1 --defer --state . --target ci
      # dbt test -m state:modified+1 --defer --state . --target ci
      - name: dbt run and test
        run: |           
          cd data-transformation/dbt/traffic_monitor
          dbt deps          
          dbt run --target ci
          dbt test --target ci