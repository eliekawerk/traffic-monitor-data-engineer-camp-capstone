name: integration
#trigger on
on:
  workflow_dispatch: 
  # pull_request:
  #   branches: [ main ]

env:
  # CH_HOST: ${{ secrets.CH_HOST }}
  # CH_DB_USER: ${{ secrets.CH_DB_USER }}
  # CH_DB_SCHEMA: ${{ secrets.CH_DB_SCHEMA }}
  # CH_DB_PASSWORD: ${{ secrets.CH_DB_PASSWORD }}
  # aws-access-key-id =  ${{ secrets.AWS_ACCESS_KEY_ID}} 
  # aws-secret-access-key =  ${{ secrets.AWS_SECRET_ACCESS_KEY}} 
  # aws-region =  ${{ secrets.AWS_REGION}} 
  GH_REF: ${{ github.ref }}   

jobs: 
  build-traffic-monitor:  # your custom name
    runs-on: ubuntu-latest
    steps: 
      # git checkout code to the machine
      - name: checkout code # custome name
        uses: actions/checkout@v3
      
      # install python version 
      - name: set up python 
        uses: actions/setup-python@v4
        with: 
          python-version: 3.9

      # install python dependencies 
      - name: install dependencies 
        run: |
          python -m pip install --upgrade pip
          pip install -r data-transformation/dbt/requirements.txt
      
      # install dbt packages
      - name: dbt deps
        run: |
          cd data-transformation/dbt/traffic_monitor
          dbt deps

      # show packages
      - name: pip list
        run: pip list

      # read env file from s3
      - uses: keithweaver/aws-s3-github-action@v1.0.0
        with:
          command: cp
          source: s3://traffic-monitor-env-s3-bucket/.env
          # destination:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: ${{ secrets.AWS_REGION}}

      # run export env file
      - name: export .env file
        run: |
          export $(cat .env | sed -e 's/[\r\n]//g')

      # run sqlfluff linting
      - name: sql linting
        run: |
          cd data-transformation/dbt
          sqlfluff lint traffic_monitor 

      # checkout to main branch
      - name: checkout to main
        uses: actions/checkout@v3
        with:
          ref: main
      
      # generate dbt manifest.json
      - name: generate dbt manifest 
        run: | 
          cd data-transformation/dbt/traffic_monitor
          dbt deps
          dbt compile --target dev
      
      # publish manifest.json
      - name: upload dbt manifest 
        uses: actions/upload-artifact@v3
        with: 
          name: manifest.json
          path: data-transformation/dbt/traffic_monitor/target/manifest.json

      # checkout back to current branch 
      - name: checkout to current branch 
        uses: actions/checkout@v3

      # download manifest.json to current working directory 
      - uses: actions/download-artifact@v3
        with:
          name: manifest.json
          path: data-transformation/dbt/traffic_monitor

      # dbt run and test
      # dbt run -m state:modified+1 --defer --state . --target ci
      # dbt test -m state:modified+1 --defer --state . --target ci
      - name: dbt run and test
        run: | 
          cd data-transformation/dbt/traffic_monitor
          dbt deps
          dbt run
          dbt test