name: deployment-prod
on:
  workflow_dispatch: 

env:
  # CH_HOST: ${{ secrets.CH_HOST }}
  # CH_DB_USER: ${{ secrets.CH_DB_USER }}
  # CH_DB_SCHEMA: ${{ secrets.CH_DB_SCHEMA }}
  # CH_DB_PASSWORD: ${{ secrets.CH_DB_PASSWORD }}
  GH_REF: ${{ github.ref }} 
  # dev_ecr: 553769343141.dkr.ecr.ap-southeast-2.amazonaws.com/traffic-monitor-dev-ecr
  aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  aws_region: ${{ secrets.AWS_REGION }}  

# jobs:
#   env:
#     runs-on: ubuntu-latest
#     # outputs:
#     #   env: ${{ steps.dotenv.outputs.aws_dev_ecr }}
    
#     steps:
#       # git checkout 
#       - name: checkout code
#         uses: actions/checkout@v3

#       - uses: keithweaver/aws-s3-github-action@v1.0.0
#         with:
#           command: cp
#           source: s3://traffic-monitor-env-s3-bucket/.env
#           # destination:
#           aws_access_key_id: ${{ env.aws_access_key_id }}
#           aws_secret_access_key: ${{ env.aws_secret_access_key }}
#           aws_region: ${{ env.aws_region }}

#       # export env
#       # cat .env | sed -e 's/[\r\n]//g' >> $GITHUB_ENV
#       # echo ${{ env.aws_dev_ecr }}
#       - name: export env file
#         run: |
#           # $(cat .env | sed -e 's/[\r\n]//g') >> $GITHUB_ENV
#           echo "luke=huntley" >> $GITHUB_ENV
#           echo ${{ env.luke }}
          

      # - name: Import environment variables from a file
      #   id: import-env
      #   shell: bash
      #   run: |
      #     while read line; do
      #       echo "$line" >> $GITHUB_ENV
      #     done < ${{ env.ENV_FILE }}

      # - name: Import environment variables from a file
      #   id: import-env
      #   run: cat ${{ env.ENV_FILE }} >> $GITHUB_ENV

      # - name: Dotenv Action
      #   id : dotenv
      #   uses: falti/dotenv-action@v1.0.4

      # - name: echo env file
      #   run: |
      #     echo ${{ steps.dotenv.outputs.aws_dev_ecr }}
      #     echo ${{ env.aws_region }}

      # - name: Environment Variables from Dotenv
      #   uses: c-py/action-dotenv-to-setenv@v4
      #   with:
      #     env-file: .env
      
      # - name: Set the value in bash
      #   id: step_one
      #   run: |
      #     EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
      #     echo "JSON_RESPONSE<<$EOF" >> $GITHUB_ENV
      #     curl https://example.com >> $GITHUB_ENV
      #     echo "$EOF" >> $GITHUB_ENV



  build: 
    runs-on: ubuntu-latest    
    # needs: [env]
    # env: $ {{ steps.dotenv.outputs.aws_dev_ecr }}
    steps: 
      # git checkout 
      - name: checkout code
        uses: actions/checkout@v3
      
      # set up docker buildx
      - name: set up docker buildx
        uses: docker/setup-buildx-action@v2

      # read env file from s3
      - uses: keithweaver/aws-s3-github-action@v1.0.0
        with:
          command: cp
          source: s3://traffic-monitor-env-s3-bucket/.env
          # destination:
          aws_access_key_id: ${{ env.aws_access_key_id }}
          aws_secret_access_key: ${{ env.aws_secret_access_key }}
          aws_region: ${{ env.aws_region }}

      # # export env
      # - name: export env file
      #   run: |
      #     export $(cat .env | sed -e 's/[\r\n]//g') 
      #     echo $aws_dev_ecr

      - name: export env file
        run: |
          echo "luke=huntley" >> $GITHUB_ENV
          echo ${{ env.luke }}

      #login to prod aws ecr
      - name: login to aws ecr
        uses: docker/login-action@v2        
        with:
          registry: ${{ env.aws_dev_ecr}}
          username: ${{ env.aws_access_key_id }}
          password: ${{ env.aws_secret_access_key }}

      # # set up python version 
      # - name: set up python 
      #   uses: actions/setup-python@v4
      #   with: 
      #     python-version: '3.10'

      # # # install python dependencies 
      # - name: install dependencies 
      #   run: |
      #     python -m pip install --upgrade pip
      #     pip install -r transforms/dbt/requirements.txt
      
      # # install dbt packages
      # - name: dbt deps
      #   run: |
      #     cd transforms/dbt/traffic_service_clickhouse
      #     dbt deps

      # # checkout to main 
      # - name: checkout to main
      #   uses: actions/checkout@v3
      #   with:
      #     ref: main
      
      # # deploy dbt project
      # - name: deploy dbt project 
      #   run: | 
      #     cd transforms/dbt/traffic_service_clickhouse
      #     dbt deps
      #     dbt run